/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TransferMulticall,
  TransferMulticallInterface,
} from "../../contracts/TransferMulticall";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "accept",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "batchTrasnfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620002e35762000014620002e8565b6200001e620002e8565b8151906001600160401b0390818311620001e3576003908154906001948583811c9316968715620002d8575b60209788851014620002c2578190601f948581116200026c575b5088908583116001146200020557600092620001f9575b505060001982861b1c191690861b1783555b8051938411620001e35760049586548681811c91168015620001d8575b82821014620001c35783811162000178575b50809285116001146200010a5750938394918492600095620000fe575b50501b92600019911b1c19161790555b6000600555604051610df590816200031a8239f35b015193503880620000d9565b92919084601f1981168860005285600020956000905b898383106200015d575050501062000142575b50505050811b019055620000e9565b01519060f884600019921b161c191690553880808062000133565b85870151895590970196948501948893509081019062000120565b87600052816000208480880160051c820192848910620001b9575b0160051c019087905b828110620001ac575050620000bc565b600081550187906200019c565b9250819262000193565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000aa565b634e487b7160e01b600052604160045260246000fd5b0151905038806200007b565b90889350601f19831691876000528a6000209260005b8c8282106200025557505084116200023c575b505050811b0183556200008d565b015160001983881b60f8161c191690553880806200022e565b8385015186558c979095019493840193016200021b565b90915085600052886000208580850160051c8201928b8610620002b8575b918a91869594930160051c01915b828110620002a857505062000064565b600081558594508a910162000298565b925081926200028a565b634e487b7160e01b600052602260045260246000fd5b92607f16926200004a565b600080fd5b60408051919082016001600160401b03811183821017620001e3576040526004825263151154d560e21b602083015256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146108b457508163095ea7b31461088a57816318160ddd1461086b57816323b872dd146107a15781632ddbd13a14610782578163313ce56714610766578163395093511461071657816370a08231146106df57816395d89b41146105e1578163a457c2d71461053c578163a9059cbb1461050b578163ac9650d81461029e578163b1af36b9146101c8578163cd67571c14610115575063dd62ed3e146100ca57600080fd5b34610111578060031936011261011157806020926100e66109c8565b6100ee6109e3565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b919050346101c457806003193601126101c4576101306109c8565b815163a9059cbb60e01b81526001600160a01b039091169281019290925260248035908301526020826044818673a581b8e2b305d3a8a1ef2442159e4d46bc9fcc505af19081156101bb5750610184575080f35b6020813d82116101b3575b8161019c602093836109f9565b810103126101115751801515036101b05780f35b80fd5b3d915061018f565b513d84823e3d90fd5b8280fd5b8284346101b057602092836003193601126101115780359367ffffffffffffffff85116101c457366023860112156101c457848201359061021461020b83610a31565b955195866109f9565b8185528085019560249687600594851b8301019136831161029a578801905b82821061028b5750505050825b84519060ff809116918210156102875761026561025d8388610cf8565b518454610a49565b8355811461027557600101610240565b634e487b7160e01b8452601183528584fd5b8480f35b81358152908301908301610233565b8680fd5b83833461011157602090816003193601126101c45783359167ffffffffffffffff948584116105075736602385011215610507578381013593868511610503576024916005973684888b1b850101116104ff5761030087939798969598610a31565b9661030d865198896109f9565b838852601f1961031c85610a31565b01875b8181106104f0575050368190036042190190875b85811061039857505050505050508051938080860192818752855180945283818801981b870101940192955b82871061036c5785850386f35b909192938280610388600193603f198a82030186528851610988565b960192019601959291909261035f565b86818d9c999a9c1b83010135838112156104ec578201878101358581116104e8576044918281019082360382136104e4579082916103e26103d98f95610cdc565b945194856109f9565b8284528c8401948336920101116104e457818f928d928637830101528a5191606091828401848110898211176104d1578f80938f938f857f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c660819985a5b195960ca1b92869761048d9c9b995260278b528a01528801525190305af4903d156104ca57508c3d61047d61047482610cdc565b925192836109f9565b815280928d3d92013e5b30610d22565b610497828c610cf8565b526104a2818b610cf8565b5060001981146104b85760010199979699610333565b634e487b7160e01b8b5260118552868bfd5b9150610487565b50634e487b7160e01b8f52604189528a8ffd5b8e80fd5b8c80fd5b8b80fd5b60608a82018c01528a0161031f565b8780fd5b8580fd5b8480fd5b50503461011157806003193601126101115760209061053561052b6109c8565b6024359033610a6c565b5160018152f35b905082346101b057826003193601126101b0576105576109c8565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610590576020856105358585038733610bda565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b8284346101b057806003193601126101b05781519181845492600184811c918186169586156106d5575b60209687851081146106c2579087899a92868b999a9b52918260001461069857505060011461065a575b858861065689610647848a03856109f9565b51928284938452830190610988565b0390f35b87945081939291528383205b828410610680575050508201018161064761065688610635565b8054848a018601528895508794909301928101610666565b60ff19168882015294151560051b8701909401945085935061064792506106569150899050610635565b634e487b7160e01b835260228a52602483fd5b92607f169261060b565b5050346101115760203660031901126101115760209181906001600160a01b036107076109c8565b16815280845220549051908152f35b50503461011157806003193601126101115761053560209261075f6107396109c8565b338352600186528483206001600160a01b03821684528652918490205460243590610a49565b9033610bda565b5050346101115781600319360112610111576020905160128152f35b5050346101115781600319360112610111576020906005549051908152f35b83915034610111576060366003190112610111576107bd6109c8565b6107c56109e3565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036107ff575b602086610535878787610a6c565b848210610828575091839161081d6020969561053595033383610bda565b9193948193506107f1565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101115781600319360112610111576020906002549051908152f35b5050346101115780600319360112610111576020906105356108aa6109c8565b6024359033610bda565b8484346101115781600319360112610111578160035492600184811c9181861695861561097e575b60209687851081146106c2578899509688969785829a529182600014610957575050600114610919575b50505061065692916106479103856109f9565b9190869350600383528383205b82841061093f5750505082010181610647610656610906565b8054848a018601528895508794909301928101610926565b60ff19168782015293151560051b8601909301935084925061064791506106569050610906565b92607f16926108dc565b919082519283825260005b8481106109b4575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610993565b600435906001600160a01b03821682036109de57565b600080fd5b602435906001600160a01b03821682036109de57565b90601f8019910116810190811067ffffffffffffffff821117610a1b57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610a1b5760051b60200190565b91908201809211610a5657565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610b875716918215610b3657600082815280602052604081205491808310610ae257604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610c8b5716918215610c3b5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b67ffffffffffffffff8111610a1b57601f01601f191660200190565b8051821015610d0c5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91929015610d845750815115610d36575090565b3b15610d3f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610d975750805190602001fd5b60405162461bcd60e51b815260206004820152908190610dbb906024830190610988565b0390fdfea2646970667358221220384aacaee2e6fe5924b68c629ef7fd696ed5cef85aacf1f9e870c71906c7100d64736f6c63430008120033";

type TransferMulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferMulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferMulticall__factory extends ContractFactory {
  constructor(...args: TransferMulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferMulticall & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TransferMulticall__factory {
    return super.connect(runner) as TransferMulticall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferMulticallInterface {
    return new Interface(_abi) as TransferMulticallInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransferMulticall {
    return new Contract(address, _abi, runner) as unknown as TransferMulticall;
  }
}
